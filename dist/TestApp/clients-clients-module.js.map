{"version":3,"sources":["./src/app/invoicer/clients/clients-routing.module.ts","./src/app/invoicer/clients/clients.module.ts","./src/app/invoicer/clients/components/client-entry/client-entry.component.ts","./src/app/invoicer/clients/components/client-entry/client-entry.component.html","./src/app/invoicer/clients/components/client/client.component.ts","./src/app/invoicer/clients/components/client/client.component.html","./src/app/services/client.service.ts"],"names":[],"mappings":"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","file":"clients-clients-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientComponent } from './components/client/client.component';\n\nconst routes: Routes = [\n  { path: '',component:ClientComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ClientsRoutingModule } from './clients-routing.module';\nimport { ClientComponent } from './components/client/client.component';\nimport { ClientEntryComponent } from './components/client-entry/client-entry.component';\nimport { ClientService } from 'src/app/services/client.service';\n\n\n@NgModule({\n  declarations: [ClientComponent, ClientEntryComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ClientsRoutingModule,\n    AgGridModule.withComponents([])\n  ],\n  providers:[ClientService]\n})\nexport class ClientsModule { }\n","import { Component, OnInit,Input, OnChanges, SimpleChanges, Output, EventEmitter} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from \"@angular/forms\"; \nimport {IClientFormModel} from './componentModel/clientFormModel';\n\n@Component({\n  selector: 'app-client-entry',\n  templateUrl: './client-entry.component.html',\n  styleUrls: ['./client-entry.component.css']\n})\nexport class ClientEntryComponent implements OnInit {\n\n  clientForm:FormGroup;\n  @Input('client') client:IClientFormModel;\n  @Output('onClientFormSubmit') onClientFormSubmit:EventEmitter<IClientFormModel> = new EventEmitter<IClientFormModel>();\n  constructor(private fb:FormBuilder) { \n  \n  }\n  ngOnInit(): void {\n    this.clientForm = this.fb.group({\n      clientName:[this.client?.clientName, Validators.required],\n      clientAddress:[this.client?.clientAddress,Validators.required],\n      isGSTApplication:[this.client?.isGSTApplication],\n      clientGSTNumber:[this.client?.clientGSTNumber]\n    });\n\n    //subscribe to GSTCheckBox value changes event \n    this.clientForm.get(\"isGSTApplication\").valueChanges.subscribe(value=>{\n      if(value){\n        this.clientForm.get(\"clientGSTNumber\").setValidators(Validators.required);\n      }else{\n        this.clientForm.get(\"clientGSTNumber\").clearValidators();\n        this.clientForm.get(\"clientGSTNumber\").setValue(null);\n        this.client.clientGSTNumber = null;\n      }\n      this.clientForm.get(\"clientGSTNumber\").updateValueAndValidity();\n    });\n  }\n  onSubmit():void{\n    this.onClientFormSubmit.emit(this.client);\n    this.clientForm.reset();\n  }\n  \n}\n","<!-- -->\n<div *ngIf=\"client\">\n    <form class=\"row g-3\" [formGroup]=\"clientForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"col-md-12\">\n            <div class=\"form-floating\">\n                <input type=\"text\" \n                        [(ngModel)]=\"client.clientName\"\n                        class=\"form-control form-control-sm\" \n                        id=\"clientName\"\n                        placeholder=\"Please enter client name\" \n                        formControlName=\"clientName\" \n                        [ngClass]=\"clientForm.get('clientName').invalid && \n                        (clientForm.get('clientName').dirty || clientForm.get('clientName').touched)?'is-invalid':''\">\n                <label for=\"clientName\">Client name</label>\n                <div class=\"invalid-feedback\" \n                     *ngIf=\"clientForm.get('clientName').errors && \n                clientForm.get('clientName').hasError('required')\">Please eneter client name</div>\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-floating\">\n                <textarea   type=\"textarea\" \n                            [(ngModel)]=\"client.clientAddress\"\n                            class=\"form-control form-control-sm\" \n                            id=\"clientAddress\"\n                            placeholder=\"Please enter client address\" \n                            formControlName=\"clientAddress\"\n                            [class.is-invalid]=\"clientForm.get('clientAddress').invalid && \n                            (clientForm.get('clientAddress').dirty || clientForm.get('clientAddress').touched)?'is-invalid':''\"></textarea>\n                <label for=\"clientAddress\">Client address</label>\n                <div class=\"invalid-feedback\" \n                *ngIf=\"clientForm.get('clientAddress').errors && \n                       clientForm.get('clientAddress').hasError('required')\">Please eneter client address</div>\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"chkGSTApplication\"\n                    formControlName=\"isGSTApplication\" [(ngModel)]=\"client.isGSTApplication\">\n                <label class=\"form-check-label\" for=\"chkGSTApplication\">\n                    GST Application\n                </label>\n            </div>\n        </div>\n        <div class=\"col-md-12\" *ngIf=\"clientForm.value.isGSTApplication\">\n            <div class=\"form-floating\">\n                <input type=\"text\" class=\"form-control form-control-sm\" id=\"clientGSTNumber\"\n                    placeholder=\"Please enter GST Number\" formControlName=\"clientGSTNumber\" [(ngModel)]=\"client.clientGSTNumber\">\n                <label for=\"clientGSTNumber\">GST Number</label>\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <button class=\"btn btn-primary\" type=\"submit\" [class.disabled]=\"clientForm.invalid\">Save</button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IClient } from 'src/app/Entities/client';\nimport { IClientFormModel } from '../client-entry/componentModel/clientFormModel';\nimport { ClientService } from '../../../../services/client.service'\nimport { SlicePipe } from '@angular/common';\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent implements OnInit {\n\n  columnDefs = [\n    { field: \"id\", width: 10, hide: true },\n    { field: \"clientName\", width: 200, headerName: 'Client name', sortable: true },\n    { field: \"clientAddress\", width: 200, headerName: 'Address', headerClass: 'client_grid_column_align-right' },\n    { field: \"gstNumber\", width: 200, headerName: \"GST No.\" }\n  ];\n  gridApi: any;\n  gridColumnApi: any;\n  constructor(private clientService: ClientService) { }\n  clientValue: IClientFormModel;\n  client: IClient = {\n    clientName: \"\",\n    clientAddress: \"\",\n    gstNumber: null,\n    id: -1\n  };\n  clients: IClient[];\n  ngOnInit(): void {\n    this.clients = this.clientService.getClient();\n    this.clientValue = this.clientModelMapper(this.client);\n\n  }\n  onClientSave(value: IClientFormModel): void {\n    if (value) {\n      if (this.client) {\n        this.client.clientName = value.clientName;\n        this.client.clientAddress = value.clientAddress;\n        this.client.gstNumber = value.clientGSTNumber;\n        this.client.id = this.clientValue.id;\n      } else {\n        this.client = {\n          clientName: value.clientName,\n          clientAddress: value.clientAddress,\n          gstNumber: value.clientGSTNumber,\n          id: -1\n        }\n      }\n      this.clients = this.clientService.saveClient(this.client);\n      this.gridApi.setRowData(this.clients);\n      this.clearClient();\n\n    }\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event: any) {\n    var selectedRows = this.gridApi.getSelectedRows();\n    this.client = selectedRows[0];\n    this.clientValue = this.clientModelMapper(this.client);\n  }\n  clientModelMapper(client: IClient) {\n    let clientValue = {\n      clientName: client.clientName,\n      clientAddress: client.clientAddress,\n      isGSTApplication: client.gstNumber !== null && client.gstNumber.length > 0 ? true : false,\n      clientGSTNumber: client.gstNumber,\n      id: this.client.id\n    }\n    return clientValue;\n  }\n  clearClient(){\n    this.client = {\n      clientName: \"\",\n      clientAddress: \"\",\n      gstNumber: null,\n      id: -1\n    };\n    this.clientValue = this.clientModelMapper(this.client);\n  }\n}\n","<div class=\"container mt-2\">\n    <h4>Manage clients</h4>\n    <hr />\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <app-client-entry [client]=\"clientValue\" (onClientFormSubmit)=\"onClientSave($event)\"></app-client-entry>\n        </div>\n        <div class=\"col-md-8\">\n            <ag-grid-angular style=\"height: 100vh; width: 90%;\" class=\"ag-theme-material\" [rowData]=\"clients\"\n                [columnDefs]=\"columnDefs\"\n                [rowSelection]=\"'single'\"\n                (gridReady)=\"onGridReady($event)\"\n                (selectionChanged)=\"onSelectionChanged($event)\">\n            </ag-grid-angular>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { IClient } from '../Entities/client';\nimport { StorageService } from './storage.service';\nimport { findNextIdentity } from '../lib/Utility';\nimport { isNgContent } from '@angular/compiler';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  clients: IClient[] = [];\n  clientKey: string = \"clients\"\n  constructor() {\n    let clietnCollection:string = localStorage.getItem(this.clientKey);\n    if (clietnCollection != null) {\n      this.clients = <IClient[]>JSON.parse(clietnCollection);\n    }\n  }\n  public getClient(): IClient[] {\n    let data:string= localStorage.getItem(this.clientKey);\n    if (data !== null) {\n        this.clients = <IClient[]>JSON.parse(data);\n    }\n    return this.clients;\n  }\n  public saveClient(client: IClient): IClient[] {\n    if (client.id == -1 || client.id == null) {\n      let id = findNextIdentity(\"id\", this.clients);\n      client.id = id;\n      this.clients.push(client);\n\n    } else {\n      let clientIndex: number = this.clients.findIndex((item) => {\n        return item.id == client.id;\n      });\n      let preValue: IClient = this.clients[clientIndex];\n      preValue.clientName = client.clientName;\n      preValue.clientAddress = client.clientAddress;\n      preValue.gstNumber = client.gstNumber;\n      this.clients[clientIndex] = preValue;\n    }\n    localStorage.setItem(this.clientKey, JSON.stringify(this.clients));\n    return this.clients;\n\n  }\n  public deletClient(client: IClient): IClient[] {\n    this.clients = this.clients.filter((item: IClient) => { return item.id !== client.id });\n    localStorage.setItem(this.clientKey, JSON.stringify(this.clients));\n    return this.clients;\n  }\n  public findClientById(id:number):IClient|null{\n    let client:IClient = null;\n    if(!isNaN(id)){\n      let searchValue = this.getClient().filter((item:IClient)=>{return item.id == id});\n      if(searchValue && searchValue.length >0) client = searchValue[0];\n    }\n    return client;\n  }\n}\n"],"sourceRoot":"webpack:///"}